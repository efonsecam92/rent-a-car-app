@model RentaCar.Models.ReservasViewModel

@{
    ViewBag.Title = "Realizar Reserva";
}

<h2>Nueva Reserva</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5>Ingrese la información correspondiente a la reserva:</h5>
        <hr class="hr-custom" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdCliente, new SelectList(ViewBag.Clientes, "IdCliente", "IdPersona"), "Seleccione cliente", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdEmpleado, new SelectList(ViewBag.Empleados, "IdEmpleado", "Cargo"), "Seleccione empleado", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdVehiculo, new SelectList(ViewBag.Vehiculos, "IdVehiculo", "Modelo"), "Seleccione vehículo", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItem = new List<SelectListItem>();
                    listItem.Add(new SelectListItem
                    {
                        Text = "Tarjeta"
                    });
                    listItem.Add(new SelectListItem
                    {
                        Text = "Efectivo"
                    });
                }
                @Html.DropDownListFor(model => model.TipoPago, listItem, "Seleccione tipo Pago", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(g => g.FechaEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(g => g.FechaDevolucion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaDevolucion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaDevolucion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(d => d.Ciudad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Ciudad", new List<SelectListItem>
                {
                    new SelectListItem{ Text = "San José"},
                    new SelectListItem{ Text = "Alajuela"},
                    new SelectListItem{ Text = "Heredia"},
                    new SelectListItem{ Text = "Cartago"},
                    new SelectListItem{ Text = "Puntarenas"},
                    new SelectListItem{ Text = "Guanacaste"},
                    new SelectListItem{ Text = "Limón"}
                }, "Seleccione la ubicación", new { @class = "form-control validate[required]" })
                @Html.ValidationMessageFor(d => d.Ciudad, null, new { @class = "text-danger " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Monto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Agregar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}