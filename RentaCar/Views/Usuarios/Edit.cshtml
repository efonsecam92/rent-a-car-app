@model RentaCar.Models.UsuariosViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Editar </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdUsuario)

        <div class="form-group">
            @Html.LabelFor(model => model.IdPersona, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdPersona, new SelectList(ViewBag.Personas, "IdPersona", "Nombre"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPersona, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItem = new List<SelectListItem>();
                    listItem.Add(new SelectListItem
                    {
                        Text = "Activo",
                        Value = "1"
                    });
                    listItem.Add(new SelectListItem
                    {
                        Text = "Inactivo",
                        Value = "0"
                    });
                }
                @Html.DropDownListFor(model => model.Estado, listItem, " ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}